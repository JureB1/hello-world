---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: false
    tags: provisioning

    vars:
      instance_type: t2.micro
      security_group: Master
      image: ami-51537029
      keypair: Slave
      region: us-west-2
      count: 1

    # Tasks to Launch an EC2 Instance
    tasks:

      - name: create key pair
        ec2_key:
          name: "{{ keypair }}"
          region: "{{ region }}"
        register: ec2key

      - name: save private key
        copy: content="{{ ec2key.key.private_key }}" dest="./{{ keypair }}.pem" mode=0600
        when: ec2key.changed

      - name: Start the new EC2 Instance
        local_action: ec2
                      group={{ security_group }}
                      instance_type={{ instance_type}}
                      image={{ image }}
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2

      - name: Add the newly created EC2 instance under [slave-server] in hosts
        lineinfile:
          path: ./hosts
          insertafter: slave-server
          line: "{{ item.public_ip }} ansible_ssh_private_key_file=./{{ keypair }}.pem"
        with_items: "{{ ec2.instances }}"

      - name: Wait for SSH to come up
        wait_for:
          host: "{{ item.public_ip }}"
          port: 22
          state: started
        with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: slave-server

      - name: Refresh inventory to ensure new instaces exist in inventory
        meta: refresh_inventory

#      - name: Add the EC2 instance to the in memory mysql group
#        add_host:
#          name: "{{ item.public_ip }}"
#          groups: slave-server
#        with_items: "{{ ec2.instances }}"

#      - name: Set Database IP fact for later use
#        set_fact:
#          database_ip: "{{ ec2.instances[0].private_ip }}"

  - name: Setup slave server with Python for ansible
    hosts: slave-server
    remote_user: ubuntu
    become: yes
    gather_facts: no
    pre_tasks:
     - name: 'install python'
       raw: 'sudo apt-get -y install python'
