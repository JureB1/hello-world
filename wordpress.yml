---
  - name: Create an EC2 Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: deployment
    
    vars:           
    
      image: ami-ba602bc2 
      securityGroup: slave-server 
      instanceType: t2.micro 
      region: us-west-2a
      keyPair: Master 
      count: 1

    tasks:    

      - name: Create a new Security Group
        local_action:
          module: ec2_group
          name: "{{ securityGroup }}"
          description: Security Group for Slave Server
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: standard_firewall

        - name: generate a KeyPair
        ec2_key:
          region: "{{ region }}"
          name: "{{ keyPair }}"
        register: awsKey

      - name: save private key
        copy:
          content: "{{ awsKey.key.private_key }}"
          dest: "~/.ssh/{{ keyPair }}.pem"
          mode: 0600
        when: awsKey.changed

      - name: Instantiate the newly created EC2 Instance
        local_action: EC2
                      image={{image}}
                      group={{securityGroup}}
                      instance_type={{instanceType}}
                      wait=true
                      region={{region}}
                      keypair={{keyPair}}
                      count={{count}}
        register: EC2

      - name: Update the local host group with the newly created EC2 instance
        local_action: lineinfile
                      dest="./hosts"
                      regexp={{item.public_ip}}
                      insertafter="[slave_server]" line={{ item.public_ip }}
        with_items: "{{EC2.instances}}"

      - name: Start SSH
        local_action: wait_for
                      host={{item.public_ip}}
                      port=22
                      state=started
        with_items: "{{EC2.instances}}"

      - name: Create tag for EC2 Instance
        local_action: ec2_tag resource={{item.id}} region={{region}} state=present
        with_items: "{{EC2.instances}}"
        args:
          tags:
            Name: slave-server

  - name: Setup slave-server with Python for Ansible
    hosts: slave-server
    gather_facts: false 
    become: true

    tasks:

      - name: Wait some time before Update
        raw: sleep 30
      - name: Run Update
        raw: apt-get update
      - name: Install Python
        raw: apt get install python

